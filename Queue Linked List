#include<stdio.h>
#include<stdlib.h>
struct node
{
    struct node *llink;
    struct node *rlink;
    int data;
};
struct node *head;
void enqueue()
{
   struct node *ptr,*temp;
   int item;
   ptr = (struct node *) malloc(sizeof(struct node));
   if(ptr == NULL)
   {
       printf("\nQueue is full");
   }
   else
   {
       printf("Enter value:");
       scanf("%d",&item);
        ptr->data=item;
       if(head == NULL)
       {
           ptr->rlink = NULL;
           ptr->llink = NULL;
           head = ptr;
       }
       else
       {
          temp = head;
          while(temp->rlink!=NULL)
          {
              temp = temp->rlink;
          }
          temp->rlink = ptr;
          ptr ->llink=temp;
          ptr->rlink = NULL;
          }

       }
     printf("Inserted into the queue");
    }
void dequeue()
{
    struct node *ptr;
    if(head == NULL)
    {
        printf("\n Queue is empty");
    }
    else if(head->rlink == NULL)
    {
        head = NULL;
        free(head);
        printf("Deleted\n");
    }
    else
    {
        ptr = head;
        head = head -> rlink;
        head -> llink = NULL;
        free(ptr);
        printf("Deleted\n");
    }

}
void display()
{
    struct node *ptr;
    printf("Queue is:");
    ptr = head;
    while(ptr != NULL)
    {
        printf("  %d",ptr->data);
        ptr=ptr->rlink;
    }
}
void main ()
{
int choice =0;
    while(1)
    {
        printf("\nSelect\n1.Enqueue\n2.Dequeue\n3.Display\n4.Exit\n");

        scanf("\n%d",&choice);
        switch(choice)
        {
            case 1:
                      enqueue();
                     break;
            case 2:
                    dequeue();
                   break;
            case 3:
                    display();
                    break;
            case 4:
                  exit(0);
                   break;
            default:
            printf("Enter valid choice");
        }
    }
}
